//
//  ADBarStyleKit.m
//  PaintProjector
//
//  Created by 胡 文杰 on 6/18/14.
//  Copyright (c) 2014 WenjiHu. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "ADBarStyleKit.h"


@implementation ADBarStyleKit

#pragma mark Cache

static UIColor* _colorEdge = nil;
static UIColor* _gradientColorStart = nil;
static UIColor* _gradientColorEnd = nil;
static UIColor* _gradientColorMid = nil;

static ADPCGradient* _gradientLightGrayPink = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _colorEdge = [UIColor colorWithRed: 1 green: 0.943 blue: 0.961 alpha: 1];
    _gradientColorStart = [UIColor colorWithRed: 0.902 green: 0.894 blue: 0.894 alpha: 1];
    _gradientColorEnd = [UIColor colorWithRed: 0.84 green: 0.821 blue: 0.821 alpha: 1];
    _gradientColorMid = [UIColor colorWithRed: 0.746 green: 0.773 blue: 0.782 alpha: 1];

    // Gradients Initialization
    CGFloat gradientLightGrayPinkLocations[] = {0, 0.7, 1};
    _gradientLightGrayPink = [ADPCGradient gradientWithColors: @[ADBarStyleKit.gradientColorStart, ADBarStyleKit.gradientColorMid, ADBarStyleKit.gradientColorEnd] locations: gradientLightGrayPinkLocations];

}

#pragma mark Colors

+ (UIColor*)colorEdge { return _colorEdge; }
+ (UIColor*)gradientColorStart { return _gradientColorStart; }
+ (UIColor*)gradientColorEnd { return _gradientColorEnd; }
+ (UIColor*)gradientColorMid { return _gradientColorMid; }

#pragma mark Gradients

+ (ADPCGradient*)gradientLightGrayPink { return _gradientLightGrayPink; }

@end



@interface ADPCGradient ()
{
    CGGradientRef _CGGradient;
}
@end

@implementation ADPCGradient

- (instancetype)initWithColors: (NSArray*)colors locations: (const CGFloat*)locations
{
    self = super.init;
    if (self)
    {
        CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
        NSMutableArray* cgColors = NSMutableArray.array;
        for (UIColor* color in colors)
            [cgColors addObject: (id)color.CGColor];

        _CGGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)cgColors, locations);
        CGColorSpaceRelease(colorSpace);
    }
    return self;
}

+ (instancetype)gradientWithColors: (NSArray*)colors locations: (const CGFloat*)locations
{
    return [self.alloc initWithColors: colors locations: locations];
}

+ (instancetype)gradientWithStartingColor: (UIColor*)startingColor endingColor: (UIColor*)endingColor
{
    CGFloat locations[] = {0, 1};
    return [self.alloc initWithColors: @[startingColor, endingColor] locations: locations];
}

- (void)dealloc
{
    CGGradientRelease(_CGGradient);
}

@end
